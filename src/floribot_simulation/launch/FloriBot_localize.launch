<?xml version='1.0'?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <!-- <arg name="model" default="$(find floribot_simulation)/urdf/Floribot_final.urdf.xacro"/> -->
  <arg name="model" default="$(find floribot_simulation)/urdf/Floribot_reduced.urdf.xacro"/>
  <!-- <arg name="model" default="$(find floribot_simulation)/urdf/primitiv.urdf.xacro"/> -->
  <arg name="rvizconfig" default="$(find floribot_simulation)/rviz/mit_laser.rviz" />
  <!-- <arg name="rvizconfig" default="$(find floribot_simulation)/rviz/urdf.rviz" /> -->
  <arg name="world_path" default="$(find virtual_maize_field)/worlds/"/>
  <arg name="world_name" default="big_lowered.world"/>
  <!-- <arg name="world_name" default="big_test.world"/> -->
  <!-- <arg name="world_name" default="generated.world"/> -->

  <rosparam file="$(find floribot_simulation)/config/joints.yaml" command="load"/> 

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher" >

     </node>
    <!-- <param name="publish_frequency" type="double" value="30.0" /> -->

  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="Front"                  args="0 0 0 0 0 0 1 base_link connection_part_2" /> -->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="recording" value="false"/>
    <!-- <arg name="headless" value="$(arg headless)"/> -->
    <arg name="world_name" value="$(arg world_path)$(arg world_name)" />
  </include>
  
  <!-- Include Laserscanners -->
  <!-- <include file="$(find sick_scan)/launch/sick_tim_5xx.launch"></include> -->
  <!-- Include RealSense Cameras -->
  <!-- <include file="$(find realsense2_camera)/launch/rs_camera.launch"></include> -->
  <!-- Include Base Node -->
  <include file="$(find base)/launch/base_node.launch"></include>
  <!-- Include Wheel Speed Publisher from Ros to Gazebo -->
  <include file="$(find base2gazebo)/launch/base2gazebo.launch"></include>

  
  



  <!-- Init Controllers-->
  
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" args="joint_state_controller joint_fl_controller joint_fr_controller joint_rl_controller joint_rr_controller body_angle_controller" />

    <!-- Include Robot Spawner ##### Muss hinter Controller Spawner stehen ########-->
  <include file="$(find virtual_maize_field)/launch/robot_spawner.launch">
    <arg name="robot_name" value="floribot"/>
    <arg name="initial_joint_pose" value="-J body_angle 0" />
    <!-- <arg name="initial_joint_pose" value="-J body_angle -1.57" /> -->
  </include>

<!-- Laser merge  -->
  <!-- <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger">
    <param name="destination_frame" value="front_laser"/>
    <param name="scan_destination_topic" value="/laser_merged"/>
    <param name="laserscan_topics" value ="/laser_scanner_front /laser_scanner_rear" />
    <param name="angle_min" value="${min_angle}"/>
    <param name="angle_max" value="${max_angle}"/>
    <param name="max_range" value="10.0"/>
    <param name="min_range" value="0.05"/>
    <param name="angle_increment" value="0.0058"/>
    <param name="samples" value="${samples}"/>
    <param name="scan_time" value="0.1"/> 
    <param name="range_min" value="0.05"/>
    <param name="range_max" value="25.0"/>
  </node> -->

<!-- map server -->

  <arg name="map_file" default="$(find floribot_simulation)/maps/testmap.yaml"/>

  <!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- amcl -->

  <include file="$(find floribot_simulation)/launch/amcl.launch"/>
    <arg name= "amcl_scan_topic" value="/laser_scanner_front" />


  <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
  < <arg name="base_global_planner" default="navfn/NavfnROS"/> >
    < <arg name="base_global_planner" default="rrt_star_global_planner/RRTStarPlanner"/> >
    <param name="base_global_planner" value="rrt_star_global_planner/RRTStarPlanner" />
		< <param name="base_global_planner" value="global_planner/GlobalPlanner" /> >
		<param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />

		<rosparam file="$(find floribot_simulation)/param/common_costmap_params.yaml" command="load" ns="global_costmap" />
		<rosparam file="$(find floribot_simulation)/param/common_costmap_params.yaml" command="load" ns="local_costmap" /> 
		<rosparam file="$(find floribot_simulation)/param/local_costmap_params.yaml" command="load" />
		<rosparam file="$(find floribot_simulation)/param/global_costmap_params.yaml" command="load" />	
		<rosparam file="$(find floribot_simulation)/param/move_base_params.yaml" command="load" />
		< <rosparam file="$(find floribot_simulation)/param/local_dwa_local_planner_params.yaml" command="load" />
		<rosparam file="$(find floribot_simulation)/param/global_global_planner_params.yaml" command="load" /> >
	</node> -->

  <!-- <node name="drive_pub" pkg="floribot_simulation" type="drive_pub.py"/> -->

  <!-- Open Simulation in rviz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />



</launch>
